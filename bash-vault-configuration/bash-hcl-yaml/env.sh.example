#### COPY this file to env.sh
#### Customize for your environment

# Whether to have TFE CLI show debug output
# DEBUG=true
DEBUG=false

# TFE SaaS Organization to install workspaces into.  This should be your own organization
# ORGANIZATION=jake-lundberg

# Token with access to your repo.  Can be found with:
# tfe oauth_tokens list --organization=${ORGANIZATION}
# OAUTH_ID=ot-8675309Jennyyeah

# Owner/TTL tag values
# OWNER=jlundberg
# TTL=8
TTL=8

#### AWS SPECIFIC VARIABLES ####
# Whether to include AWS workspaces
INCLUDE_AWS=true

# Credentials file with AWS login environment variables
# DO NOT CHECK THIS FILE INTO VERSION CONTROL!
# It's usually best to locate this somewhere in your home directory and out of any kind of git repo
# AWS_CREDENTIALS_FILE=~/.tfe_aws_envs
AWS_CREDENTIALS_FILE=~/.tfe_aws_envs

# Github repo for the AWS terraform assets.
# AWS_REPO=grove-mountain/terraform-aws-ec2-instance
#
# Environments to create for AWS
# AWS_ENVIRONMENTS="dev qa prod"
AWS_ENVIRONMENTS="dev qa prod"

# The root name for any workspace that's created.
# this can be added to to get a workspace name 
# e.g. 
# WORKSPACE_PREFIX=${AWS_WORKSPACE_PREFIX}
# BRANCH=qa
# WORKSPACE=${WORKSPACE_PREFIX}-${BRANCH}
AWS_WORKSPACE_PREFIX=aws-ec2-instance
 
# AWS Region to put assets into
# AWS_REGION=us-east-1
AWS_REGION=us-east-1

# Default AWS Instance type to use
# AWS_INSTANCE_TYPE=t2.micro
AWS_INSTANCE_TYPE=t2.micro


#### GCP SPECIFIC VARIABLES ####
# Whether to include GCP workspaces
INCLUDE_GCP=true

# File containing Google Service Account credentials with the ability to create Compute Engine resources
# GOOGLE_CREDENTIALS_FILE=~/.tfe_gcp_svc_account
GCP_CREDENTIALS_FILE=~/.tfe_gcp_svc_account

# Github repo for the GCP Terraform assets.
# GCP_REPO=grove-mountain/terraform-gpc-compute-instance

# Environments to create for GCP
# GCP_ENVIRONMENTS="dev qa prod"
GCP_ENVIRONMENTS="dev qa prod"

# Root name of the workspaces to create.   
# GCP_WORKSPACE_PREFIX=gcp-compute-instance
GCP_WORKSPACE_PREFIX=gcp-compute-instance

# GCP Region to create assets in
# GCP_REGION=us-west1
GCP_REGION=us-west1

# GCP Zone to create assets in
# GCP_ZONE=us-west1-a
GCP_ZONE=us-west1-a

# The GCP project to install the resources into
# GCP_PROJECT=jlundberg-demo

# The GCP machine_type to create
# GCP_MACHINE_TYPE=f1-micro
GCP_MACHINE_TYPE=f1-micro


#### AZURE SPECIFIC VARIABLES ####
# Whether to include Azure workspaces
INCLUDE_AZURE=true

# Github repo for the Azure Terraform assets.
# AZURE_REPO=grove-mountain/terraform-azure-compute-instance

# Azure region to launch resources into
# AZURE_REGION="West US"
AZURE_REGION="WestUS"

# Environments to create for Azure
# Each of these will create a separate workspace based off from a branch of the same name
# AZURE_ENVIRONMENTS="dev qa prod"
AZURE_ENVIRONMENTS="dev qa prod"

# Root name of the workspaces to create.   
#AZURE_WORKSPACE_PREFIX=azure-virtual-machine
AZURE_WORKSPACE_PREFIX=azure-vm

# Root name of the workspaces to create.   
#AZURE_INSTANCE_TYPE=Standard_B1s
AZURE_INSTANCE_TYPE=Standard_B1s

# The CIDR notation for the Virtual Network Address space
# This is a list value that must retain its quotes so wrapping on single quotes
# VN_ADDRESS_SPACE='["10.0.0.0/16"]'
AZURE_VN_ADDRESS_SPACE='["10.0.0.0/16"]'

# Subnet CIDR for placing assets into
# SB_ADDRESS_PREFIX=10.0.1.0/24
AZURE_SB_ADDRESS_PREFIX=10.0.1.0/24

# The admin password for the server created
# ADMIN_PASSWORD=8675309-Jenny
AZURE_ADMIN_PASSWORD=8675309-Jenny

#### DEMO APPLICATION 42 VARIABLES ####
# It's probably easiest to just re-use the AWS/GCP/AZURE variables above
# But you can always customize them 
# Prefix name of the workspace.   Environment/branch will be affixed 
# APP42_WORKSPACE_PREFIX=app42
APP42_WORKSPACE_PREFIX=app42

# The VCS repo to pull the module code from
# APP42_REPO=grove-mountain/tfe-demo-application42
